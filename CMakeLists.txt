cmake_minimum_required(VERSION 3.2.2)
set (CMAKE_CXX_STANDARD 14)
project(minergate)

if(WIN32)
  if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(ARCH_64bit ON)
  else()
    add_definitions(-DNO_ETH)
  endif()
else()
  set(ARCH_64bit ON)
endif()

if (NOT WIN32)
  if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU" AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.0)
    set(GCC_VER 5)
    add_definitions(-DGCC_VER=5)
    cmake_policy(SET CMP0043 NEW)
  else()
    set(GCC_VER 4)
    add_definitions(-DGCC_VER=4)
  endif()
endif()

if(ARCH_64bit)
  set(MINER_MAJOR_VERSION "6")
  set(MINER_MINOR_VERSION "7")
else()
  set(MINER_MAJOR_VERSION "5")
  set(MINER_MINOR_VERSION "17")
endif()

add_definitions(-DMAJOR_VERSION=\"${MINER_MAJOR_VERSION}\")
add_definitions(-DMINOR_VERSION=\"${MINER_MINOR_VERSION}\")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")

if(WIN32)
  add_definitions(-DNOMINMAX)
  if(ARCH_64bit)
    set(ARCH_DIR win64)
    set(WINDEPS_DIR ${CMAKE_SOURCE_DIR}/windependencies)
  else()
    set(ARCH_DIR win32)
    set(WINDEPS_DIR ${CMAKE_SOURCE_DIR}/win32dependencies)
  endif()

elseif(UNIX AND NOT APPLE)
  set(LINDEPS_DIR ${CMAKE_SOURCE_DIR}/lindependencies)
  if(EXISTS /etc/redhat-release)
    add_definitions(-DRPM_BASED_LINUX)
  elseif(EXISTS /etc/SuSe-release)
    add_definitions(-DRPM_BASED_LINUX)
  elseif(EXISTS /etc/debian_version)
    add_definitions(-DDEB_BASED_LINUX)
  endif()
elseif(APPLE)
  set(MACDEPS_DIR ${CMAKE_SOURCE_DIR}/macdependencies)
endif(WIN32)

add_subdirectory(sources)

if (MSVC)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
endif()
